import { describe, expect, it } from 'vitest';

import { validateYarnLockString } from '../lib/npd.js';

describe('validate yarn lock', () => {
  it('should return valid lock v1', async () => {
    const params = {
      yarnLockString:
        '# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\nfake-package-1@^1.0.0:\n  version "1.0.3"',
    };
    expect(validateYarnLockString(params)).toEqual(true);
  });

  it('should return invalid lock v1', async () => {
    const params = {
      yarnLockString:
        '# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\nfake-package-1@^1.0.0:\n  resolved "https://registry.npmjs.org/fake-package-1/-/fake-package-1-1.0.3.tgz#a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0"',
    };
    expect(() => validateYarnLockString(params)).toThrowError(/must have required property 'version'/);
  });

  it('should return valid lock v2', async () => {
    const params = {
      yarnLockString:
        '# This file is generated by running "yarn install" inside your project.\n# Manual changes might be lost - proceed with caution!\n\n__metadata:\n  version: 4\n\n"fake-package-1@npm:^1.0.0":\n  version: 1.0.3',
    };
    expect(validateYarnLockString(params)).toEqual(true);
  });

  it('should return invalid lock v2', async () => {
    const params = {
      yarnLockString:
        '# This file is generated by running "yarn install" inside your project.\n# Manual changes might be lost - proceed with caution!\n\n__metadata:\n  version: 4\n\n"fake-package-1@npm:^1.0.0":\n  bin:',
    };
    expect(() => validateYarnLockString(params)).toThrowError(/must have required property 'version'/);
  });

  it('should return invalid metadata', async () => {
    const params = {
      yarnLockString:
        '# This file is generated by running "yarn install" inside your project.\n# Manual changes might be lost - proceed with caution!\n\n__metadata:\n  version: a',
    };
    expect(() => validateYarnLockString(params)).toThrowError(/Lock file version not yet supported./);
  });

  it('should return invalid lockfile version', async () => {
    const params = {
      yarnLockString: '# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v2',
    };
    expect(() => validateYarnLockString(params)).toThrowError(/Lock file version not yet supported./);
  });
});
